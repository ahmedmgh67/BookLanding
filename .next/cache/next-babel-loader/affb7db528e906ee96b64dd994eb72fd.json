{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addQuantityWithNumber } from '../../store/actions/cartActions';\nimport ImageSlide from './ImageSlide';\nimport RelatedProducts from './RelatedProducts';\nimport Description from './Description';\n\nclass DetailsBody extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      qty: 1,\n      max: 10,\n      min: 1,\n      sizeGuide: false,\n      shipModal: false\n    });\n\n    _defineProperty(this, \"onFormSubmit\", e => {\n      e.preventDefault();\n    });\n\n    _defineProperty(this, \"handleAddToCartFromView\", () => {\n      this.props.addQuantityWithNumber(8, this.state.qty);\n    });\n  }\n\n  render() {\n    return __jsx(\"section\", {\n      className: \"shop-details-area ptb-100\"\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"shop-details\"\n    }, __jsx(\"div\", {\n      className: \"row h-100 justify-content-center align-items-center\"\n    }, __jsx(ImageSlide, null), __jsx(\"div\", {\n      className: \"col-lg-8 col-md-12\"\n    }, __jsx(\"div\", {\n      className: \"product-entry-summary\"\n    }, __jsx(\"h3\", null, \"Gold Buyer's Survival Manual\"), __jsx(\"h4\", null, __jsx(\"span\", null, \"$44.00\"), \" $30.00\"), __jsx(\"p\", null, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\u2019s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\"), __jsx(\"ul\", {\n      className: \"product-categories\"\n    }, __jsx(\"li\", null, \"Categories:\"), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\"\n    }, \"Books\"), \",\"), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\"\n    }, \"Art\"))), __jsx(\"form\", {\n      onSubmit: this.onFormSubmit\n    }, __jsx(\"input\", {\n      type: \"number\",\n      name: \"quantity\",\n      title: \"Qty\",\n      className: \"form-control\",\n      value: this.state.qty,\n      min: this.state.min,\n      max: this.state.max,\n      onChange: e => this.setState({\n        qty: e.target.value\n      })\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.handleAddToCartFromView\n    }, \"Add to Cart\")), __jsx(\"ul\", {\n      className: \"share-social\"\n    }, __jsx(\"li\", null, \"Share:\"), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\"\n    }, __jsx(\"i\", {\n      className: \"icofont-facebook\"\n    }))), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\"\n    }, __jsx(\"i\", {\n      className: \"icofont-twitter\"\n    }))), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\"\n    }, __jsx(\"i\", {\n      className: \"icofont-linkedin\"\n    }))), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\"\n    }, __jsx(\"i\", {\n      className: \"icofont-instagram\"\n    }))))))), __jsx(Description, null))), __jsx(RelatedProducts, null));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addQuantityWithNumber: (id, qty) => {\n      dispatch(addQuantityWithNumber(id, qty));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(DetailsBody);","map":null,"metadata":{},"sourceType":"module"}