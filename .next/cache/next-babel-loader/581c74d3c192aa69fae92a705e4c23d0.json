{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nvar Funfact = /*#__PURE__*/function (_React$Component) {\n  _inherits(Funfact, _React$Component);\n\n  var _super = _createSuper(Funfact);\n\n  function Funfact() {\n    var _this;\n\n    _classCallCheck(this, Funfact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      didViewCountUp: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onVisibilityChange\", function (isVisible) {\n      if (isVisible) {\n        _this.setState({\n          didViewCountUp: true\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Funfact, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"section\", {\n        className: \"app-funfacts-area ptb-100\"\n      }, __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-download\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 2 : 0,\n        duration: 3\n      }))), \"B\"), __jsx(\"p\", null, \"Download\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-star\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 5 : 0,\n        duration: 3\n      })))), __jsx(\"p\", null, \"Ratings\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-user-suited\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 500 : 0,\n        duration: 3\n      }))), \"M\"), __jsx(\"p\", null, \"Active Users\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-thumbs-up\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 13 : 0,\n        duration: 3\n      }))), \"K\"), __jsx(\"p\", null, \"Updates\"))))));\n    }\n  }]);\n\n  return Funfact;\n}(React.Component);\n\nexport default Funfact;","map":null,"metadata":{},"sourceType":"module"}