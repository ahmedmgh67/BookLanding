{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { withRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport Link from \"../../utils/ActiveLink\";\nimport SideDrawer from \"./SideDrawer\";\nimport SearchForm from \"./SearchForm\";\nimport { finalPath } from \"../../pages/index\";\n\nclass Navbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_isMounted\", false);\n\n    _defineProperty(this, \"state\", {\n      drawer: false,\n      searchForm: false,\n      collapsed: true\n    });\n\n    _defineProperty(this, \"toggleNavbar\", () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    });\n\n    _defineProperty(this, \"handleDrawer\", () => {\n      this.setState(prevState => {\n        return {\n          drawer: !prevState.drawer\n        };\n      });\n    });\n\n    _defineProperty(this, \"handleSearchForm\", () => {\n      this.setState(prevState => {\n        return {\n          searchForm: !prevState.searchForm\n        };\n      });\n    });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    let elementId = document.getElementById(\"navbar\");\n    document.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 170) {\n        elementId.classList.add(\"is-sticky\");\n      } else {\n        elementId.classList.remove(\"is-sticky\");\n      }\n    });\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let {\n      pathname\n    } = this.props.router;\n    let {\n      products\n    } = this.props;\n    let layOutCls = \"\";\n    let logo = finalPath + \"/images/logo.png\";\n\n    if (pathname == \"/digital-marketing\") {\n      layOutCls = \"marketing-navbar\";\n      logo = \"/images/logo2.png\";\n    }\n\n    const {\n      collapsed\n    } = this.state;\n    const classOne = collapsed ? \"collapse navbar-collapse\" : \"collapse navbar-collapse show\";\n    const classTwo = collapsed ? \"navbar-toggler navbar-toggler-right collapsed\" : \"navbar-toggler navbar-toggler-right\";\n    return __jsx(React.Fragment, null, __jsx(\"header\", {\n      id: \"header\"\n    }, __jsx(\"div\", {\n      id: \"navbar\",\n      className: `crake-nav ${layOutCls}`\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"nav\", {\n      className: \"navbar navbar-expand-md navbar-light\"\n    }, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      className: \"navbar-brand\"\n    }, \"Sekrety Rozwoju\", __jsx(\"br\", null), \" Osobistego\")), __jsx(\"button\", {\n      onClick: this.toggleNavbar,\n      className: classTwo,\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarSupportedContent\",\n      \"aria-controls\": \"navbarSupportedContent\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\"\n    }, __jsx(\"span\", {\n      className: \"navbar-toggler-icon\"\n    })), __jsx(\"div\", {\n      className: classOne,\n      id: \"navbarSupportedContent\"\n    }, __jsx(\"ul\", {\n      className: \"navbar-nav nav ml-auto\"\n    }, __jsx(\"li\", {\n      className: \"nav-item\"\n    }, __jsx(Link, {\n      activeClassName: \"active\",\n      href: \"#\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"Home\"))), __jsx(\"li\", {\n      className: \"nav-item\"\n    }, __jsx(Link, {\n      activeClassName: \"active\",\n      href: \"#index\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"Spis tre\\u015Bci\"))), __jsx(\"li\", {\n      className: \"nav-item\"\n    }, __jsx(Link, {\n      activeClassName: \"active\",\n      href: \"#references\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"Referencje\"))), __jsx(\"li\", {\n      className: \"nav-item\"\n    }, __jsx(Link, {\n      activeClassName: \"active\",\n      href: \"#faq\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"FAQ\"))), __jsx(\"li\", {\n      className: \"nav-item\"\n    }, __jsx(Link, {\n      activeClassName: \"active\",\n      href: \"#kupteraz\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"Kup teraz\"))))))))), this.state.drawer ? __jsx(SideDrawer, {\n      onClick: this.handleDrawer\n    }) : \"\", this.state.searchForm ? __jsx(SearchForm, {\n      onClick: this.handleSearchForm\n    }) : \"\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.addedItems\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Navbar));","map":null,"metadata":{},"sourceType":"module"}