{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nclass Funfact extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      didViewCountUp: false\n    });\n\n    _defineProperty(this, \"onVisibilityChange\", isVisible => {\n      if (isVisible) {\n        this.setState({\n          didViewCountUp: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"section\", {\n      className: \"fun-facts-area ptb-100\"\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-users\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 806 : 0,\n      duration: 3\n    })))), __jsx(\"p\", null, \"Satisfied Client\"))), __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-thumbs-up\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 202 : 0,\n      duration: 3\n    })))), __jsx(\"p\", null, \"Appriciation\"))), __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-diamond\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 5241 : 0,\n      duration: 3\n    })))), __jsx(\"p\", null, \"Response time\"))), __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-wrench\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 512 : 0,\n      duration: 3\n    })))), __jsx(\"p\", null, \"Data Entry\"))))), __jsx(\"div\", {\n      className: \"fun-facts-inner-area\"\n    }, __jsx(\"div\", {\n      className: \"container-fluid\"\n    }, __jsx(\"div\", {\n      className: \"row h-100 justify-content-center align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-6 col-md-12\"\n    }, __jsx(\"div\", {\n      className: \"fun-facts-image\"\n    }, __jsx(\"img\", {\n      src: \"/images/features-img2.png\",\n      alt: \"image\"\n    }))), __jsx(\"div\", {\n      className: \"col-lg-6 col-md-12\"\n    }, __jsx(\"div\", {\n      className: \"fun-facts-inner-content\"\n    }, __jsx(\"h3\", null, \"Build Beautiful Interface Into Your Application\"), __jsx(\"p\", null, \"Funding freemium technology focus equity bootstrapping usernce niche market. Seed round agile development growth hacking retur investment alpha. Investor advisor marketing pitch gen scrum project.\"), __jsx(\"p\", null, \"Responsive web design. Agile development innovator termsheet is users interface pitch scrum project research & development.\"), __jsx(\"ul\", null, __jsx(\"li\", null, \"Unimited Video Call\"), __jsx(\"li\", null, \"Add Favourite contact\"), __jsx(\"li\", null, \"Camera Filter\")), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      className: \"btn btn-primary\"\n    }, \"Read More\"))))))));\n  }\n\n}\n\nexport default Funfact;","map":{"version":3,"sources":["/home/sergio/Dokumenty/priv/book-landing/sekrety/components/Saas/Funfact.js"],"names":["React","Link","CountUp","VisibilitySensor","Funfact","Component","didViewCountUp","isVisible","setState","render","onVisibilityChange","top","state"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAAA;AAAA;;AAAA,mCAE1B;AACJC,MAAAA,cAAc,EAAE;AADZ,KAF0B;;AAAA,gDAMbC,SAAS,IAAI;AAC9B,UAAIA,SAAJ,EAAe;AACX,aAAKC,QAAL,CAAc;AAAEF,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACH;AACJ,KAViC;AAAA;;AAYlCG,EAAAA,MAAM,GAAG;AACL,WACI;AAAS,MAAA,SAAS,EAAC;AAAnB,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAG,MAAA,SAAS,EAAC;AAAb,MADJ,CADJ,EAII,kBACI;AAAM,MAAA,SAAS,EAAC;AAAhB,OACI,MAAC,gBAAD;AACI,MAAA,QAAQ,EAAE,KAAKC,kBADnB;AAEI,MAAA,MAAM,EAAE;AACJC,QAAAA,GAAG,EAAE;AADD,OAFZ;AAKI,MAAA,WAAW;AALf,OAOI,MAAC,OAAD;AACI,MAAA,KAAK,EAAE,CADX;AAEI,MAAA,GAAG,EACC,KAAKC,KAAL,CAAWN,cAAX,GACM,GADN,GAEM,CALd;AAOI,MAAA,QAAQ,EAAE;AAPd,MAPJ,CADJ,CADJ,CAJJ,EAyBI,oCAzBJ,CADJ,CADJ,EA+BI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAG,MAAA,SAAS,EAAC;AAAb,MADJ,CADJ,EAII,kBACI;AAAM,MAAA,SAAS,EAAC;AAAhB,OACI,MAAC,gBAAD;AACI,MAAA,QAAQ,EAAE,KAAKI,kBADnB;AAEI,MAAA,MAAM,EAAE;AACJC,QAAAA,GAAG,EAAE;AADD,OAFZ;AAKI,MAAA,WAAW;AALf,OAOI,MAAC,OAAD;AACI,MAAA,KAAK,EAAE,CADX;AAEI,MAAA,GAAG,EACC,KAAKC,KAAL,CAAWN,cAAX,GACM,GADN,GAEM,CALd;AAOI,MAAA,QAAQ,EAAE;AAPd,MAPJ,CADJ,CADJ,CAJJ,EAyBI,gCAzBJ,CADJ,CA/BJ,EA6DI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAG,MAAA,SAAS,EAAC;AAAb,MADJ,CADJ,EAII,kBACI;AAAM,MAAA,SAAS,EAAC;AAAhB,OACI,MAAC,gBAAD;AACI,MAAA,QAAQ,EAAE,KAAKI,kBADnB;AAEI,MAAA,MAAM,EAAE;AACJC,QAAAA,GAAG,EAAE;AADD,OAFZ;AAKI,MAAA,WAAW;AALf,OAOI,MAAC,OAAD;AACI,MAAA,KAAK,EAAE,CADX;AAEI,MAAA,GAAG,EACC,KAAKC,KAAL,CAAWN,cAAX,GACM,IADN,GAEM,CALd;AAOI,MAAA,QAAQ,EAAE;AAPd,MAPJ,CADJ,CADJ,CAJJ,EAyBI,iCAzBJ,CADJ,CA7DJ,EA2FI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAG,MAAA,SAAS,EAAC;AAAb,MADJ,CADJ,EAII,kBACI;AAAM,MAAA,SAAS,EAAC;AAAhB,OACI,MAAC,gBAAD;AACI,MAAA,QAAQ,EAAE,KAAKI,kBADnB;AAEI,MAAA,MAAM,EAAE;AACJC,QAAAA,GAAG,EAAE;AADD,OAFZ;AAKI,MAAA,WAAW;AALf,OAOI,MAAC,OAAD;AACI,MAAA,KAAK,EAAE,CADX;AAEI,MAAA,GAAG,EACC,KAAKC,KAAL,CAAWN,cAAX,GACM,GADN,GAEM,CALd;AAOI,MAAA,QAAQ,EAAE;AAPd,MAPJ,CADJ,CADJ,CAJJ,EAyBI,8BAzBJ,CADJ,CA3FJ,CADJ,CADJ,EA6HI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,GAAG,EAAC,2BAAT;AAAqC,MAAA,GAAG,EAAC;AAAzC,MADJ,CADJ,CADJ,EAOI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,oEADJ,EAEI,wNAFJ,EAGI,+IAHJ,EAII,kBACI,wCADJ,EAEI,0CAFJ,EAGI,kCAHJ,CAJJ,EASI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACI;AAAG,MAAA,SAAS,EAAC;AAAb,mBADJ,CATJ,CADJ,CAPJ,CADJ,CADJ,CA7HJ,CADJ;AA2JH;;AAxKiC;;AA2KtC,eAAeF,OAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nclass Funfact extends React.Component {\n\n    state = {\n        didViewCountUp: false\n    };\n\n    onVisibilityChange = isVisible => {\n        if (isVisible) {\n            this.setState({ didViewCountUp: true });\n        }\n    };\n\n    render() {\n        return (\n            <section className=\"fun-facts-area ptb-100\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-users\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 806\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                </h3>\n                                <p>Satisfied Client</p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-thumbs-up\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 202\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                </h3>\n                                <p>Appriciation</p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-diamond\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 5241\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                </h3>\n                                <p>Response time</p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-wrench\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 512\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                </h3>\n                                <p>Data Entry</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"fun-facts-inner-area\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row h-100 justify-content-center align-items-center\">\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"fun-facts-image\">\n                                    <img src='/images/features-img2.png' alt=\"image\" />\n                                </div>\n                            </div>\n\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"fun-facts-inner-content\">\n                                    <h3>Build Beautiful Interface Into Your Application</h3>\n                                    <p>Funding freemium technology focus equity bootstrapping usernce niche market. Seed round agile development growth hacking retur investment alpha. Investor advisor marketing pitch gen scrum project.</p>\n                                    <p>Responsive web design. Agile development innovator termsheet is users interface pitch scrum project research & development.</p>\n                                    <ul>\n                                        <li>Unimited Video Call</li>\n                                        <li>Add Favourite contact</li>\n                                        <li>Camera Filter</li>\n                                    </ul>\n                                    <Link href=\"#\">\n                                        <a className=\"btn btn-primary\">Read More</a>\n                                    </Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Funfact;\n"]},"metadata":{},"sourceType":"module"}