{"ast":null,"code":"import _classCallCheck from \"/home/sergio/Dokumenty/priv/book-landing/sekrety/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergio/Dokumenty/priv/book-landing/sekrety/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sergio/Dokumenty/priv/book-landing/sekrety/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sergio/Dokumenty/priv/book-landing/sekrety/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/sergio/Dokumenty/priv/book-landing/sekrety/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergio/Dokumenty/priv/book-landing/sekrety/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/sergio/Dokumenty/priv/book-landing/sekrety/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport { finalPath } from '../../pages/index';\n\nvar Funfact = /*#__PURE__*/function (_React$Component) {\n  _inherits(Funfact, _React$Component);\n\n  var _super = _createSuper(Funfact);\n\n  function Funfact() {\n    var _this;\n\n    _classCallCheck(this, Funfact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      didViewCountUp: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onVisibilityChange\", function (isVisible) {\n      if (isVisible) {\n        _this.setState({\n          didViewCountUp: true\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Funfact, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"section\", {\n        className: \"app-funfacts-area ptb-100\"\n      }, __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-book-alt\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 5 : 0,\n        duration: 3\n      }))), \"M\"), __jsx(\"p\", null, \"Copies Sold\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-coffee-alt\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 1 : 0,\n        duration: 3\n      }))), \"M\"), __jsx(\"p\", null, \"Cup Of Coffe\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-book-mark\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 1 : 0,\n        duration: 3\n      }))), \"M\"), __jsx(\"p\", null, \"Copies Released\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-ui-user\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 50 : 0,\n        duration: 3\n      }))), \"K\"), __jsx(\"p\", null, \"Happy Readers\"))))));\n    }\n  }]);\n\n  return Funfact;\n}(React.Component);\n\nexport default Funfact;","map":{"version":3,"sources":["/home/sergio/Dokumenty/priv/book-landing/sekrety/components/BookLanding/Funfact.js"],"names":["React","CountUp","VisibilitySensor","finalPath","Funfact","didViewCountUp","isVisible","setState","onVisibilityChange","top","state","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport {finalPath} from '../../pages/index';\nclass Funfact extends React.Component {\n\n    state = {\n        didViewCountUp: false\n    };\n\n    onVisibilityChange = isVisible => {\n        if (isVisible) {\n            this.setState({ didViewCountUp: true });\n        }\n    };\n\n    render() {\n        return (\n            <section className=\"app-funfacts-area ptb-100\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-book-alt\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 5\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                    M\n                                </h3>\n                                <p>Copies Sold</p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-coffee-alt\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 1\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                    M\n                                </h3>\n                                <p>Cup Of Coffe</p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-book-mark\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 1\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                    M\n                                </h3>\n                                <p>Copies Released</p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-ui-user\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 50\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                    K\n                                </h3>\n                                <p>Happy Readers</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Funfact;\n"]},"metadata":{},"sourceType":"module"}