{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport { finalPath } from '../../pages/index';\n\nclass Funfact extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      didViewCountUp: false\n    });\n\n    _defineProperty(this, \"onVisibilityChange\", isVisible => {\n      if (isVisible) {\n        this.setState({\n          didViewCountUp: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"section\", {\n      className: \"app-funfacts-area ptb-100\"\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-book-alt\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 5 : 0,\n      duration: 3\n    }))), \"M\"), __jsx(\"p\", null, \"Copies Sold\"))), __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-coffee-alt\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 1 : 0,\n      duration: 3\n    }))), \"M\"), __jsx(\"p\", null, \"Cup Of Coffe\"))), __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-book-mark\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 1 : 0,\n      duration: 3\n    }))), \"M\"), __jsx(\"p\", null, \"Copies Released\"))), __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-ui-user\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 50 : 0,\n      duration: 3\n    }))), \"K\"), __jsx(\"p\", null, \"Happy Readers\"))))));\n  }\n\n}\n\nexport default Funfact;","map":{"version":3,"sources":["/home/sergio/Dokumenty/priv/book-landing/sekrety/components/BookLanding/Funfact.js"],"names":["React","CountUp","VisibilitySensor","finalPath","Funfact","Component","didViewCountUp","isVisible","setState","render","onVisibilityChange","top","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport {finalPath} from '../../pages/index';\nclass Funfact extends React.Component {\n\n    state = {\n        didViewCountUp: false\n    };\n\n    onVisibilityChange = isVisible => {\n        if (isVisible) {\n            this.setState({ didViewCountUp: true });\n        }\n    };\n\n    render() {\n        return (\n            <section className=\"app-funfacts-area ptb-100\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-book-alt\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 5\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                    M\n                                </h3>\n                                <p>Copies Sold</p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-coffee-alt\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 1\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                    M\n                                </h3>\n                                <p>Cup Of Coffe</p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-book-mark\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 1\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                    M\n                                </h3>\n                                <p>Copies Released</p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"single-funfact\">\n                                <div className=\"icon\">\n                                    <i className=\"icofont-ui-user\"></i>\n                                </div>\n                                <h3>\n                                    <span className=\"count\">\n                                        <VisibilitySensor\n                                            onChange={this.onVisibilityChange}\n                                            offset={{\n                                                top: 10\n                                            }}\n                                            delayedCall\n                                        >\n                                            <CountUp\n                                                start={0}\n                                                end={\n                                                    this.state.didViewCountUp\n                                                        ? 50\n                                                        : 0\n                                                }\n                                                duration={3}\n                                            />\n                                        </VisibilitySensor>\n                                    </span>\n                                    K\n                                </h3>\n                                <p>Happy Readers</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Funfact;\n"]},"metadata":{},"sourceType":"module"}